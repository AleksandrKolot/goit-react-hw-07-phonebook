{"version":3,"sources":["components/App/App.module.css","components/ContactList/ContactList.module.css","redux/actions.js","redux/operations.js","redux/selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/App/App.jsx","redux/reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","axios","defaults","baseURL","getContactsItems","state","contacts","items","getContactList","createSelector","filter","normalizedFilter","toLowerCase","contact","name","includes","ContactList","dispatch","useDispatch","useSelector","useEffect","actions","get","then","data","catch","error","message","className","s","table","map","number","id","type","onClick","delete","deleteContact","ContactForm","useState","setName","setNumber","handleInputChange","e","currentTarget","value","form","onSubmit","preventDefault","trim","existContact","find","isContsctExist","alert","post","label","input","pattern","title","onChange","Filter","event","target","App","getContactsError","isLoading","loading","getContactsLoading","itemContactReducer","createReducer","payload","action","filtered","el","filterContactReducer","loadingContactReducer","errotContactReducer","combineReducers","store","configureStore","reducer","contactReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb3870e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2k79Q\",\"App-find\":\"App_App-find__2F7eS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"ContactList_table__2LsT6\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\r\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\r\nexport const addContactsError = createAction('contacts/addContactsError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const filterContact = createAction('contacts/changeFilter');\r\n","import axios from 'axios';\r\nimport * as actions from './actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3008';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(actions.fetchContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(actions.fetchContactsError(error.message)));\r\n};\r\n\r\nexport const addContact = data => dispatch => {\r\n  dispatch(actions.addContactsRequest());\r\n  axios\r\n    .post('/contacts', data)\r\n    .then(({ data }) => dispatch(actions.addContactsSuccess(data)))\r\n    .catch(error => dispatch(actions.addContactsError(error.message)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(actions.deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(id)))\r\n    .catch(error => dispatch(actions.deleteContactError(error.message)));\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContactsItems = state => state.contacts.items;\r\nexport const getContactsFilter = state => state.contacts.filter;\r\nexport const getContactsError = state => state.contacts.error;\r\nexport const getContactsLoading = state => state.contacts.loading;\r\n\r\nexport const getContactList = createSelector(\r\n  [getContactsItems, getContactsFilter],\r\n  (items, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return items.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import s from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, fetchContacts } from '../../redux/operations';\nimport { getContactList } from '../../redux/selectors';\n\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContactList);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    //eslint-disable-next-line\n  }, []);\n\n  return (\n    <table className={s.table}>\n      <tbody>\n        {contacts.map(({ name, number, id }) => (\n          <tr key={id}>\n            <td>{name}</td>\n            <td>{number}</td>\n            <td>\n              <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n                del\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\nexport default ContactList;\n","import s from './ContactForm.module.css';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport { getContactsItems } from '../../redux/selectors';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const contacts = useSelector(state => getContactsItems(state));\n\n  const isContsctExist = () => {\n    const normalizedFilter = name.toLowerCase();\n    return contacts.find(\n      contact => contact.name.toLowerCase() === normalizedFilter,\n    );\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name.trim() === '' || number.trim() === '') {\n      alert('Fill all fields!');\n      return;\n    }\n    const existContact = isContsctExist();\n    if (existContact) {\n      alert(`${existContact.name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          onChange={handleInputChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          onChange={handleInputChange}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useDispatch } from 'react-redux';\r\nimport { filterContact } from '../../redux/actions';\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onFilter = event => dispatch(filterContact(event.target.value));\r\n\r\n  return (\r\n    <label>\r\n      <input type=\"text\" name=\"filter\" onChange={onFilter} />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import s from './App.module.css';\nimport { useSelector } from 'react-redux';\nimport ContactList from '../ContactList/ContactList';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport { getContactsError, getContactsLoading } from '../../redux/selectors';\n\nfunction App() {\n  const error = useSelector(state => getContactsError(state));\n  const isLoading = useSelector(state => getContactsLoading(state));\n  return (\n    <div className={s.App}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <p className={s.find}>Find contacts by name</p>\n      <Filter />\n      {isLoading && <p>{' Loading... '}</p>}\n      {error && <p>{' Sorry, something goes wrong: ' + error}</p>}\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\n\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filterContact,\r\n} from './actions';\r\n\r\nconst itemContactReducer = createReducer([], {\r\n  [fetchContactsSuccess.type]: (state, actions) => actions.payload,\r\n  [addContactsSuccess.type]: (state, action) => [...state, action.payload],\r\n  [deleteContactSuccess.type]: (state, action) => {\r\n    const filtered = state.filter(el => el.id !== action.payload);\r\n    return [...filtered];\r\n  },\r\n});\r\n\r\nconst filterContactReducer = createReducer('', {\r\n  [filterContact.type]: (state, action) => action.payload,\r\n});\r\n\r\nconst loadingContactReducer = createReducer(false, {\r\n  [fetchContactsRequest.type]: () => true,\r\n  [fetchContactsSuccess.type]: () => false,\r\n  [fetchContactsError.type]: () => false,\r\n  [addContactsRequest.type]: () => true,\r\n  [addContactsSuccess.type]: () => false,\r\n  [addContactsError.type]: () => false,\r\n  [deleteContactRequest.type]: () => true,\r\n  [deleteContactSuccess.type]: () => false,\r\n  [deleteContactError.type]: () => false,\r\n});\r\n\r\nconst errotContactReducer = createReducer('', {\r\n  [fetchContactsError.type]: (state, action) => action.payload,\r\n  [addContactsError.type]: (state, action) => action.payload,\r\n  [deleteContactError.type]: (state, action) => action.payload,\r\n  [fetchContactsRequest.type]: () => '',\r\n  [addContactsRequest.type]: () => '',\r\n  [deleteContactRequest.type]: () => '',\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemContactReducer,\r\n  filter: filterContactReducer,\r\n  loading: loadingContactReducer,\r\n  error: errotContactReducer,\r\n});\r\n","import { configureStore /*getDefaultMiddleware*/ } from '@reduxjs/toolkit';\n// import {\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from 'redux-persist';\n\nimport contactReducer from './reducers';\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n// ];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  // middleware,\n  // devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport default store;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1Q_20\",\"label\":\"ContactForm_label__w2Lft\",\"input\":\"ContactForm_input__1Kwqg\"};"],"sourceRoot":""}